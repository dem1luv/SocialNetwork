{"version":3,"sources":["components/content/Settings/SettingsContent/SettingsContentProfile/SettingsContentProfile.module.css","components/SidebarLeft/SidebarLeft.module.css","components/content/Profile/ProfileIntro/ProfileIntro.module.css","components/common/Post/Post.module.css","components/Header/Header.module.css","components/content/Users/Users.module.css","components/content/Profile/ProfileInfo/ProfileInfo.module.css","components/content/Profile/ProfilePosts/ProfilePosts.module.css","components/content/Settings/SettingsNavbar/SettingsNavbar.module.css","assets/svg/unlikedHeart.svg","components/content/Profile/Profile.module.css","components/common/Preolader/Preloader.module.css","assets/svg/likedHeart.svg","components/content/Settings/Settings.module.css","components/content/Settings/SettingsContent/SettingsContent.module.css","components/content/Settings/SettingsContent/SettingsContentProfile/SettingsContentProfileIntro/SettingsContentProfileIntro.module.css","components/content/News/News.module.css","assets/svg/arrowDown.svg","components/content/Users/User/User.module.css","logo.svg","components/common/Preolader/Preloader.jsx","components/content/Profile/ProfileInfo/ProfileInfo.jsx","components/content/Profile/ProfileInfo/ProfileInfoContainer.jsx","components/content/Profile/ProfileIntro/ProfileIntro.jsx","components/content/Profile/ProfileIntro/ProfileIntroContainer.jsx","components/common/Post/Post.jsx","components/content/Profile/ProfilePosts/ProfilePosts.jsx","api/api.js","redux/profileReducer.js","components/content/Profile/ProfilePosts/ProfilePostsContainer.jsx","components/content/Profile/Profile.jsx","components/content/Profile/ProfileContainer.jsx","components/content/Messages/Messages.jsx","components/content/Music/Music.jsx","components/content/Settings/SettingsNavbar/SettingsNavbar.jsx","components/content/Settings/SettingsContent/SettingsContentProfile/SettingsContentProfileIntro/SettingsContentProfileIntro.jsx","components/content/Settings/SettingsContent/SettingsContentProfile/SettingsContentProfile.jsx","redux/currentUserReducer.js","components/content/Settings/SettingsContent/SettingsContentProfile/SettingsContentProfileContainer.jsx","components/content/Settings/SettingsContent/SettingsContentGeneral/SettingsContentGeneral.jsx","components/content/Settings/SettingsContent/SettingsContentGeneral/SettingsContentGeneralContainer.jsx","components/content/Settings/SettingsContent/SettingsContent.jsx","components/content/Settings/SettingsContent/SettingsContentContainer.jsx","components/content/Settings/Settings.jsx","components/content/News/News.jsx","redux/newsReducer.js","components/content/News/NewsContainer.jsx","components/SidebarLeft/SidebarLeft.jsx","components/SidebarLeft/SidebarLeftContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/content/Users/User/User.jsx","components/content/Users/Users.jsx","redux/usersReducer.js","components/content/Users/UsersContainer.jsx","components/content/LogIn/LogIn.jsx","App.js","serviceWorker.js","redux/store.js","index.js"],"names":["module","exports","Preloader","props","className","s","ldsEllipsis","ProfileInfo","photoUrl","largePhoto","profileInfo","background","style","ava","src","alt","name","fullName","ProfileInfoContainer","this","React","Component","connect","state","profilePage","userProfile","photos","large","ProfileIntro","contactsElements","contacts","Object","keys","forEach","k","push","profileIntro","lookingForAJob","item","lookingForAJobDescription","aboutMe","length","noInfo","ProfileIntroContainer","Post","post","user","small","head","to","id","nameDate","date","text","stat","isLoggedIn","liked","onClick","onDoUnlike","likedHeart","onDoLike","unlikedHeart","likesCount","ProfilePosts","textareaElement","createRef","current","height","scrollHeight","onAddPost","e","target","onChangeInput","value","currentUser","profilePosts","addPostContainer","type","textInput","onChange","bind","placeholder","ref","postsContainer","posts","map","p","key","axiosInstance","axios","create","headers","baseURL","withCredentials","userAPI","page","usersCount","get","then","response","data","userId","authAPI","initState","isFetching","setUserProfile","toggleFetching","profileReducer","action","Date","toLocaleString","postId","ProfilePostsContainer","changeInput","doUnlike","doLike","addPost","Profile","profile","ProfileContainer","getUserProfile","match","params","ProfileContainerWithRouter","withRouter","dispatch","Messages","header","path","render","Music","SettingsNavbar","settingsNavbar","activeClassName","active","SettingsContentProfileIntro","changeIntroTitle","intro","changeIntroText","deleteIntro","title","onChangeTitle","onChangeText","onDeleteIntro","SettingsContentProfile","resetChanges","changeName","changeAva","changeBg","changeCity","changeCountry","addIntro","saveChanges","settingsContent","newData","onChangeName","avaUrl","onChangeAva","bgUrl","onChangeBg","city","onChangeCity","country","onChangeCountry","i","onAddIntro","buttonAddIntro","onSaveChanges","buttonSaveChanges","undefined","email","login","currentUserReducer","alert","newState","introIndex","indexOf","filter","SettingsContentProfileContainer","changeNameAC","changeAvaAC","changeBgAC","changeCityAC","changeCountryAC","introId","changeIntroTitleAC","changeIntroTextAC","deleteIntroAC","SettingsContentGeneral","SettingsContentGeneralContainer","SettingsContent","SettingsContentContainer","Settings","settings","News","news","newsReducer","NewsContainer","newsPage","doLikeAC","doUnlikeAC","SidebarLeft","aside","SidebarLeftContainer","Header","userMenuNavElement","getCurrentUser","display","userMenu","toggleUserMenuNav","arrow","arrowDown","userMenuNav","logOut","logInLink","HeaderContainer","userData","profileData","User","followButton","photo","followed","Users","pagesCount","Math","ceil","usersTotalCount","paginationElements","currentPage","paginationButton","onSetCurrentPage","usersElements","users","u","usersContent","paginationList","usersList","setUsers","setUsersTotalCount","setCurrentPage","usersReducer","UsersContainer","getUsers","usersPage","items","totalCount","catch","LogIn","App","component","Boolean","window","location","hostname","reducers","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.2d0486ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsContent\":\"SettingsContentProfile_settingsContent__v-BJH\",\"item\":\"SettingsContentProfile_item__tXvNr\",\"buttonAddIntro\":\"SettingsContentProfile_buttonAddIntro__3Q53x\",\"buttonSaveChanges\":\"SettingsContentProfile_buttonSaveChanges__3MvIQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aside\":\"SidebarLeft_aside__8-4qE\",\"active\":\"SidebarLeft_active__oTnY-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileIntro\":\"ProfileIntro_profileIntro__AQeCM\",\"noInfo\":\"ProfileIntro_noInfo__3mYMg\",\"contacts\":\"ProfileIntro_contacts__1AXRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2moPk\",\"head\":\"Post_head__2heKm\",\"ava\":\"Post_ava__3D5wP\",\"nameDate\":\"Post_nameDate__VYXH_\",\"text\":\"Post_text__DxdpT\",\"stat\":\"Post_stat__3py6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2epVt\",\"userMenu\":\"Header_userMenu__FRhJb\",\"ava\":\"Header_ava__1FxJc\",\"arrow\":\"Header_arrow__3q4uE\",\"userMenuNav\":\"Header_userMenuNav__1hrIj\",\"logInLink\":\"Header_logInLink__1EC9G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersContent\":\"Users_usersContent__1aCNE\",\"paginationList\":\"Users_paginationList__2l_9e\",\"paginationButton\":\"Users_paginationButton__1748L\",\"current\":\"Users_current__2vZ4_\",\"usersList\":\"Users_usersList__9gz4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__1gRAx\",\"background\":\"ProfileInfo_background__1O1JO\",\"ava\":\"ProfileInfo_ava__13Lzy\",\"name\":\"ProfileInfo_name__2rSKo\",\"location\":\"ProfileInfo_location__3tYmw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profilePosts\":\"ProfilePosts_profilePosts__1_2iD\",\"addPostContainer\":\"ProfilePosts_addPostContainer__3Fvda\",\"postsContainer\":\"ProfilePosts_postsContainer__jkUjO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsNavbar\":\"SettingsNavbar_settingsNavbar__1mS_F\",\"active\":\"SettingsNavbar_active__2eT72\"};","module.exports = __webpack_public_path__ + \"static/media/unlikedHeart.f6108e34.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3ENS9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsEllipsis\":\"Preloader_ldsEllipsis__1h77T\",\"ldsEllipsis1\":\"Preloader_ldsEllipsis1__22fBW\",\"ldsEllipsis2\":\"Preloader_ldsEllipsis2__3s_Wj\",\"ldsEllipsis3\":\"Preloader_ldsEllipsis3__zaS4d\"};","module.exports = __webpack_public_path__ + \"static/media/likedHeart.47b57fcc.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__hpFvM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settingsContent\":\"SettingsContent_settingsContent__3UmXE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"SettingsContentProfileIntro_intro__gXFCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__Yt4aZ\"};","module.exports = __webpack_public_path__ + \"static/media/arrowDown.a3396931.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"User_user__ima9h\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\nimport s from \"./Preloader.module.css\"\r\n\r\nconst Preloader = props => {\r\n    return <div className={s.ldsEllipsis}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\nimport s from \"./ProfileInfo.module.css\";\n\nconst ProfileInfo = props => {\n    const photoUrl = props.largePhoto ? props.largePhoto : \"https://p.kindpng.com/picc/s/78-785827_user-profile-avatar-login-account-male-user-icon.png\"\n\n    return (\n        <div className={s.profileInfo}>\n            <div className={s.background} style={ {\"backgroundImage\": \"url(\" + photoUrl + \")\"} }>\n                <div></div>\n            </div>\n            <div className={s.ava}>\n                <img src={photoUrl} alt=\"\"/>\n            </div>\n            <div className={s.name}>{props.fullName}</div>\n        </div>\n    );\n}\n\nexport default ProfileInfo;","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\n\r\nclass ProfileInfoContainer extends React.Component {\r\n    render() {\r\n        return <ProfileInfo {...this.props}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    largePhoto: state.profilePage.userProfile?.photos?.large,\r\n    fullName: state.profilePage.userProfile?.fullName\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ProfileInfoContainer)","import React from \"react\";\nimport s from \"./ProfileIntro.module.css\";\n\nconst ProfileIntro = props => {\n    const contactsElements = []\n    if (props.contacts) {\n        Object.keys(props.contacts).forEach(k => {\n            if (props.contacts[k] !== null) {\n                contactsElements.push(<li>{k}: {props.contacts[k]}</li>)\n            }\n        });\n    }\n\n    return (\n        <div className={s.profileIntro}>\n            <h2>Profile Info</h2>\n            {props.lookingForAJob ? (\n                <div className={s.item}>\n                    <h3>Looking for a job</h3>\n                    <h4>{props.lookingForAJob}</h4>\n                    <p>{props.lookingForAJobDescription}</p>\n                </div>\n            ) : null}\n            {props.aboutMe ? (\n                <div className={s.item}>\n                    <h3>About me</h3>\n                    <p>{props.aboutMe}</p>\n                </div>) : null\n            }\n            {contactsElements.length > 0 ? (\n                <div className={s.item}>\n                    <h3>Contacts</h3>\n                    <p><ul className={s.contacts}>\n                        {contactsElements}\n                    </ul></p>\n                </div>\n            ) : null}\n            {!props.aboutMe && !props.lookingForAJob && contactsElements.length === 0 ? (\n                <p className={s.noInfo}>There's no info 😔</p>\n            ) : null }\n        </div>\n    );\n}\n\nexport default ProfileIntro;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport ProfileIntro from \"./ProfileIntro\";\n\nclass ProfileIntroContainer extends React.Component {\n    render() {\n        return <ProfileIntro {...this.props}/>\n    }\n}\n\nconst mapStateToProps = state => ({\n    aboutMe: state.profilePage.userProfile.aboutMe,\n    lookingForAJob: state.profilePage.userProfile.lookingForAJob,\n    lookingForAJobDescription: state.profilePage.userProfile.lookingForAJobDescription,\n    contacts: state.profilePage.userProfile.contacts\n});\n\nexport default connect(mapStateToProps, {})(ProfileIntroContainer);","import React from \"react\";\nimport s from \"./Post.module.css\";\nimport {NavLink} from \"react-router-dom\";\nimport likedHeart from \"../../../assets/svg/likedHeart.svg\";\nimport unlikedHeart from \"../../../assets/svg/unlikedHeart.svg\";\n\nconst Post = props => {\n    const photoUrl = props.post.user.photos.small\n        ? props.post.user.photos.small\n        : \"https://p.kindpng.com/picc/s/78-785827_user-profile-avatar-login-account-male-user-icon.png\"\n\n    return (\n        <div className={s.item}>\n            <div className={s.head}>\n                <div className={s.ava}>\n                    <NavLink to={`/profile/${props.post.user.id}`}><img src={photoUrl} alt=\"\"/></NavLink>\n                </div>\n                <div className={s.nameDate}>\n                    <div><NavLink to={`/profile/${props.post.user.id}`}>{props.post.user.name}</NavLink></div>\n                    <div>{props.post.date}</div>\n                </div>\n            </div>\n            <div className={s.text}>{props.post.text}</div>\n            <div className={s.stat}>\n                {props.isLoggedIn ? <>\n                    {props.post.liked ?\n                        <button onClick={() => {\n                            props.onDoUnlike(props.post.id)\n                        }}><img src={likedHeart} alt=\"\"/></button> :\n                        <button onClick={() => {\n                            props.onDoLike(props.post.id)\n                        }}><img src={unlikedHeart} alt=\"\"/></button>\n                    } </>\n                    : <NavLink to={'/login'}><img src={unlikedHeart} alt=\"\"/></NavLink>\n                }\n                <span>{props.post.likesCount}</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Post;","import React from \"react\";\nimport s from \"./ProfilePosts.module.css\";\nimport Post from \"../../../common/Post/Post\";\n\nclass ProfilePosts extends React.Component {\n    constructor(props) {\n        super(props);\n        this.textareaElement = React.createRef();\n    }\n\n    componentDidMount() {\n        if (this.textareaElement.current) {\n            this.textareaElement.current.style.height = \"33px\";\n            this.textareaElement.current.style.height = (this.textareaElement.current.scrollHeight) + \"px\";\n        }\n    }\n\n    onAddPost() {\n        this.textareaElement.current.style.height = \"33px\";\n        this.props.onAddPost();\n    }\n\n    onChangeInput(e) {\n        e.target.style.height = \"33px\";\n        e.target.style.height = (e.target.scrollHeight) + \"px\";\n        this.props.onChangeInput(e.target.value);\n    }\n\n    render() {\n        const photoUrl = this.props.currentUser.photos.small\n            ? this.props.currentUser.photos.small\n            : \"https://p.kindpng.com/picc/s/78-785827_user-profile-avatar-login-account-male-user-icon.png\"\n\n        return (\n            <div className={s.profilePosts}>\n                {this.props.currentUser.isLoggedIn ? (\n                    <div className={s.addPostContainer}>\n                        <img src={photoUrl} alt=\"\"/>\n                        <textarea type=\"text\" value={this.props.textInput} onChange={this.onChangeInput.bind(this)}\n                                  placeholder=\"Hey, what's up?\"\n                                  ref={this.textareaElement}/>\n                        <button onClick={this.onAddPost.bind(this)}>Post</button>\n                    </div> )\n                    : null\n                }\n                <div className={s.postsContainer}>\n                    {this.props.posts.map((p) => <Post key={p.id} post={p} onDoLike={this.props.onDoLike}\n                                                       onDoUnlike={this.props.onDoUnlike}\n                                                       isLoggedIn={this.props.currentUser.isLoggedIn}/>)}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProfilePosts;","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n    headers: {\r\n        'API-KEY': 'ba3b16ba-c3a0-404f-acd8-1f2bd9f7b405'\r\n    },\r\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\r\n    withCredentials: true,\r\n})\r\n\r\nexport const userAPI = {\r\n    getUsers(page = 1, usersCount = 10) {\r\n        return axiosInstance.get(`users?page=${page}&count=${usersCount}`)\r\n            .then(response => response.data);\r\n    },\r\n    getUserProfile(userId) {\r\n        return axiosInstance.get(`profile/${userId}`)\r\n            .then(response => response.data);\r\n    },\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        debugger;\r\n        return axiosInstance.get(\"auth/me\").then(response => response.data)\r\n    }\r\n}","import {userAPI} from \"../api/api\";\n\nconst ADD_POST = \"ADD-POST\";\nconst CHANGE_INPUT = \"CHANGE-INPUT\";\nconst DO_LIKE = \"DO-LIKE\";\nconst DO_UNLIKE = \"DO-UNLIKE\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst TOGGLE_FETCHING = \"TOGGLE_FETCHING\";\n\nlet initState = {\n    posts: [\n        {\n            id: 0,\n            text: \"Hey, people, here's my first post!\",\n            date: \"28.05.2020, 17:25:09\",\n            liked: false,\n            likesCount: 0,\n            user: {\n                id: 0,\n                photos: {\n                    small: \"https://hypeava.ru/uploads/posts/2020-03/1583012706_5.jpg\",\n                    large: \"https://hypeava.ru/uploads/posts/2020-03/1583012706_5.jpg\",\n                },\n                name: \"Test User\",\n            },\n        },\n    ],\n    textInput: \"\",\n    userProfile: {},\n    isFetching: true,\n}\n\nconst profileReducer = (state = initState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            return {\n                ...state,\n                posts: [{\n                    id: state.posts.length === 0 ? 0 : state.posts[0].id + 1,\n                    text: state.textInput,\n                    date: new Date().toLocaleString(),\n                    liked: false,\n                    likesCount: 0,\n                    user: {...action.currentUser},\n                }, ...state.posts,],\n                textInput: \"\",\n            }\n        case CHANGE_INPUT:\n            return {\n                ...state,\n                textInput: action.text,\n            }\n        case DO_LIKE:\n            return {\n                ...state,\n                posts: [...state.posts.map(p => {\n                    if (p.id === action.postId) {\n                        p.liked = true;\n                        p.likesCount++;\n                    }\n                    return p;\n                })]\n            }\n        case DO_UNLIKE:\n            return {\n                ...state,\n                posts: [...state.posts.map(p => {\n                    if (p.id === action.postId) {\n                        p.liked = false;\n                        p.likesCount--;\n                    }\n                    return p;\n                })]\n            }\n        case SET_USER_PROFILE:\n            return {...state, userProfile: action.userProfile}\n        case TOGGLE_FETCHING:\n            debugger\n            return {...state, isFetching: action.isFetching}\n        default:\n            return state;\n    }\n}\n\nexport const addPost = currentUser => ({\n    type: ADD_POST,\n    currentUser: currentUser,\n});\nexport const changeInput = text => ({\n    type: CHANGE_INPUT,\n    text: text,\n});\nexport const doLike = postId => ({\n    type: DO_LIKE,\n    postId: postId,\n});\nexport const doUnlike = postId => ({\n    type: DO_UNLIKE,\n    postId: postId,\n});\nexport const setUserProfile = userProfile => ({\n    type: SET_USER_PROFILE,\n    userProfile: userProfile,\n});\nexport const getUserProfile = userId => {\n    return dispatch => {\n        dispatch(toggleFetching(true));\n        userAPI.getUserProfile(userId).then(data => {\n            dispatch(setUserProfile(data));\n            dispatch(toggleFetching(false));\n        });\n    }\n}\nexport const toggleFetching = isFetching => ({\n    type: TOGGLE_FETCHING,\n    isFetching: isFetching,\n});\n\nexport default profileReducer;","import React from \"react\";\nimport ProfilePosts from \"./ProfilePosts\";\nimport {addPost, changeInput, doLike, doUnlike} from \"../../../../redux/profileReducer\";\nimport {connect} from \"react-redux\";\n\nclass ProfilePostsContainer extends React.Component {\n    onAddPost() {\n        this.props.addPost(this.props.currentUser);\n    }\n\n    onChangeInput = this.props.changeInput;\n\n    onDoUnlike = this.props.doUnlike;\n\n    onDoLike = this.props.doLike;\n\n    render() {\n        return <ProfilePosts\n            textInput={this.props.textInput}\n            posts={this.props.posts}\n            currentUser={this.props.currentUser}\n            onAddPost={this.onAddPost.bind(this)}\n            onChangeInput={this.onChangeInput.bind(this)}\n            onDoUnlike={this.onDoUnlike.bind(this)}\n            onDoLike={this.onDoLike.bind(this)}\n        />\n    }\n}\n\nconst mapStateToProps = state => ({\n    textInput: state.profilePage.textInput,\n    posts: state.profilePage.posts,\n    currentUser: state.currentUser,\n});\n\nexport default connect(mapStateToProps, {\n    addPost, changeInput, doLike, doUnlike\n})(ProfilePostsContainer);","import React from \"react\";\nimport s from \"./Profile.module.css\";\nimport Preloader from \"../../common/Preolader/Preloader\";\nimport ProfileInfoContainer from \"./ProfileInfo/ProfileInfoContainer\";\nimport ProfileIntroContainer from \"./ProfileIntro/ProfileIntroContainer\";\nimport ProfilePostsContainer from \"./ProfilePosts/ProfilePostsContainer\";\n\nconst Profile = props => {\n    return (\n        <div className={s.profile}>\n            {props.isFetching ? <Preloader/> : (<>\n                <ProfileInfoContainer/>\n                <ProfileIntroContainer/>\n                <ProfilePostsContainer/>\n            </>)}\n        </div>\n    );\n}\n\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    getUserProfile,\r\n    setUserProfile,\r\n    toggleFetching\r\n} from \"../../../redux/profileReducer\";\r\nimport {withRouter} from \"react-router\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getUserProfile(this.props.match.params.userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile isFetching={this.props.isFetching}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isFetching: state.profilePage.isFetching,\r\n});\r\n\r\nconst ProfileContainerWithRouter = withRouter(ProfileContainer);\r\n\r\nexport default connect(mapStateToProps, {\r\n    toggleFetching, setUserProfile, getUserProfile\r\n})(ProfileContainerWithRouter);","import React from \"react\";\nimport s from \"./Messages.module.css\";\nimport {Route} from \"react-router-dom\";\n\nclass Messages extends React.Component {\n    render() {\n        return (\n            <header className={s.header}>\n                <img src=\"\" alt=\"\"/>\n                <span>\n                <Route path=\"/profile\" render={() => \"Profile\"}/>\n                <Route path=\"/music\" render={() => \"Music\"}/>\n                <Route path=\"/news\" render={() => \"News\"}/>\n                <Route path=\"/users\" render={() => \"Users\"}/>\n                <Route path=\"/messages\" render={() => \"Messages\"}/>\n                <Route path=\"/settings\" render={() => \"Settings\"}/>\n            </span>\n            </header>\n        );\n    }\n}\n\nexport default Messages;","import React from \"react\";\nimport s from \"./Music.module.css\";\nimport {Route} from \"react-router-dom\";\n\nclass Music extends React.Component {\n    render() {\n        return (\n            <header className={s.header}>\n                <img src=\"\" alt=\"\"/>\n                <span>\n                <Route path=\"/profile\" render={() => \"Profile\"}/>\n                <Route path=\"/music\" render={() => \"Music\"}/>\n                <Route path=\"/news\" render={() => \"News\"}/>\n                <Route path=\"/users\" render={() => \"Users\"}/>\n                <Route path=\"/messages\" render={() => \"Messages\"}/>\n                <Route path=\"/settings\" render={() => \"Settings\"}/>\n            </span>\n            </header>\n        );\n    }\n}\n\nexport default Music;","import React from \"react\";\nimport s from \"./SettingsNavbar.module.css\";\nimport {NavLink, Route} from \"react-router-dom\";\n\nclass SettingsNavbar extends React.Component {\n    render() {\n        return (\n            <div className={s.settingsNavbar}>\n                <h2>Settings</h2>\n                <nav>\n                    <NavLink to=\"/settings/profile\" activeClassName={s.active}>Profile</NavLink>\n                    <NavLink to=\"/settings/general\" activeClassName={s.active}>General</NavLink>\n                </nav>\n            </div>\n        );\n    }\n}\n\nexport default SettingsNavbar;","import React from \"react\";\nimport s from \"./SettingsContentProfileIntro.module.css\";\n\nclass SettingsContentProfileIntro extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onChangeTitle(e) {\n        this.props.changeIntroTitle(this.props.intro.id, e.target.value);\n    }\n\n    onChangeText(e) {\n        this.props.changeIntroText(this.props.intro.id, e.target.value);\n    }\n\n    onDeleteIntro() {\n        this.props.deleteIntro(this.props.intro.id);\n    }\n\n    render() {\n        return (\n            <div className={s.intro}>\n                <div>\n                    <div>\n                        <span>Title:</span>\n                        <input type=\"text\" value={this.props.intro.title} onChange={this.onChangeTitle.bind(this)} placeholder=\"Title\"/>\n                    </div>\n                    <div>\n                        <span>Text:</span>\n                        <textarea value={this.props.intro.text} onChange={this.onChangeText.bind(this)} placeholder=\"Text\"/>\n                    </div>\n                </div>\n                <button onClick={this.onDeleteIntro.bind(this)}>Delete</button>\n            </div>\n        );\n    }\n}\n\nexport default SettingsContentProfileIntro;","import React from \"react\";\nimport s from \"./SettingsContentProfile.module.css\";\nimport SettingsContentProfileIntro from \"./SettingsContentProfileIntro/SettingsContentProfileIntro\";\n\nclass SettingsContentProfile extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentWillUnmount() {\n        this.props.resetChanges();\n    }\n\n    onChangeName(e) {\n        this.props.changeName(this.props.currentUser, e.target.value);\n    }\n\n    onChangeAva(e) {\n        this.props.changeAva(this.props.currentUser, e.target.value);\n    }\n\n    onChangeBg(e) {\n        this.props.changeBg(this.props.currentUser, e.target.value);\n    }\n\n    onChangeCity(e) {\n        this.props.changeCity(this.props.currentUser, e.target.value);\n    }\n\n    onChangeCountry(e) {\n        this.props.changeCountry(this.props.currentUser, e.target.value);\n    }\n\n    onAddIntro() {\n        this.props.addIntro();\n    }\n\n    onSaveChanges() {\n        this.props.saveChanges();\n    }\n\n    render() {\n        return (\n            <div className={s.settingsContent}>\n                <img src=\"\" alt=\"\"/>\n                <h2>Profile Settings</h2>\n                <div>\n                    <div className={s.item}>\n                        <span>Name:</span>\n                        <input type=\"text\" value={this.props.currentUser.newData.name}\n                               onChange={this.onChangeName.bind(this)}\n                               placeholder=\"Name\"/>\n                    </div>\n                    <div className={s.item}>\n                        <span>Avatar (URL):</span>\n                        <input type=\"text\" value={this.props.currentUser.newData.avaUrl}\n                               onChange={this.onChangeAva.bind(this)}\n                               placeholder=\"Avatar URL\"/>\n                    </div>\n                    <div className={s.item}>\n                        <span>Background (URL):</span>\n                        <input type=\"text\" value={this.props.currentUser.newData.bgUrl}\n                               onChange={this.onChangeBg.bind(this)}\n                               placeholder=\"Background URL\"/>\n                    </div>\n                    <div className={s.item}>\n                        <span>City:</span>\n                        <input type=\"text\" value={this.props.currentUser.newData.city}\n                               onChange={this.onChangeCity.bind(this)}\n                               placeholder=\"City\"/>\n                    </div>\n                    <div className={s.item}>\n                        <span>Country:</span>\n                        <input type=\"text\" value={this.props.currentUser.newData.country}\n                               onChange={this.onChangeCountry.bind(this)}\n                               placeholder=\"Country\"/>\n                    </div>\n                </div>\n                <h3>Intro</h3>\n                <div>\n                    <div>\n                        {this.props.currentUser.newData.intro.map(i => <SettingsContentProfileIntro key={i.id}\n                                                                                                    intro={i}\n                                                                                                    changeIntroTitle={this.props.changeIntroTitle}\n                                                                                                    changeIntroText={this.props.changeIntroText}\n                                                                                                    deleteIntro={this.props.deleteIntro}/>)}\n                    </div>\n                    <button onClick={this.onAddIntro.bind(this)} className={s.buttonAddIntro}>Add Intro</button>\n                </div>\n                <button onClick={this.onSaveChanges.bind(this)} className={s.buttonSaveChanges}>Save Changes</button>\n            </div>\n        );\n    }\n}\n\nexport default SettingsContentProfile;","import {authAPI, userAPI} from \"../api/api\";\n\nconst CHANGE_NAME = \"CHANGE-NAME\";\nconst CHANGE_AVA = \"CHANGE-AVA\";\nconst CHANGE_BG = \"CHANGE-BG\";\nconst CHANGE_CITY = \"CHANGE-CITY\";\nconst CHANGE_COUNTRY = \"CHANGE-COUNTRY\";\nconst LOG_OUT = \"LOG-OUT\";\nconst ADD_INTRO = \"ADD-INTRO\";\nconst CHANGE_INTRO_TITLE = \"CHANGE-INTRO-TITLE\";\nconst CHANGE_INTRO_TEXT = \"CHANGE-INTRO-TEXT\";\nconst DELETE_INTRO = \"DELETE-INTRO\";\nconst SAVE_CHANGES = \"SAVE-CHANGES\";\nconst RESET_CHANGES = \"RESET-CHANGES\";\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\nlet initState = {\n    data: {\n        id: undefined,\n        email: undefined,\n        login: undefined,\n    },\n    photos: {\n        small: undefined,\n        large: undefined,\n    },\n    avaUrl: \"https://hypeava.ru/uploads/posts/2020-03/1583012706_5.jpg\",\n    bgUrl: \"https://storge.pic2.me/cm/3200x1800/592/55fc5d8db7b39.jpg\",\n    name: \"Dmitriy Demyanenko\",\n    city: \"Sumy\",\n    country: \"Ukraine\",\n    intro: [\n        {id: 0, title: \"About me\", text: \"Frontend developer 16 y.o. 😉\"},\n        {id: 1, title: \"Favorite anime\", text: \"JoJo's Bizzare Adventure\"},\n    ],\n    newData: {\n        avaUrl: \"https://hypeava.ru/uploads/posts/2020-03/1583012706_5.jpg\",\n        bgUrl: \"https://storge.pic2.me/cm/3200x1800/592/55fc5d8db7b39.jpg\",\n        name: \"Dmitriy Demyanenko\",\n        city: \"Sumy\",\n        country: \"Ukraine\",\n        intro: [\n            {id: 0, title: \"About me\", text: \"Frontend developer 16 y.o. 😉\"},\n            {id: 1, title: \"Favorite anime\", text: \"JoJo's Bizzare Adventure\"},\n        ],\n    },\n    isLoggedIn: false,\n}\n\nconst currentUserReducer = (state = initState, action) => {\n    switch (action.type) {\n        case CHANGE_NAME:\n            return {\n                ...state,\n                newData: {\n                    ...state.newData,\n                    name: action.name,\n                },\n            }\n        case CHANGE_AVA:\n            return {\n                ...state,\n                newData: {\n                    ...state.newData,\n                    avaUrl: action.avaUrl,\n                }\n            }\n        case CHANGE_BG:\n            return {\n                ...state,\n                newData: {\n                    ...state.newData,\n                    bgUrl: action.bgUrl,\n                },\n            }\n        case CHANGE_CITY:\n            return {\n                ...state,\n                newData: {\n                    ...state.newData,\n                    city: action.city,\n                },\n            }\n        case CHANGE_COUNTRY:\n            return {\n                ...state,\n                newData: {\n                    ...state.newData,\n                    country: action.country,\n                },\n            }\n        case LOG_OUT:\n            alert(\"ur logged out\");\n            return state;\n        case ADD_INTRO: {\n            return {\n                ...state,\n                newData: {\n                    ...state.newData,\n                    intro: [\n                        ...state.newData.intro,\n                        {\n                            id: state.newData.intro.length === 0 ? 0 : state.newData.intro[state.newData.intro.length - 1].id + 1,\n                            title: \"Title\",\n                            text: \"Text\",\n                        },\n                    ],\n                },\n            }\n        }\n        case CHANGE_INTRO_TITLE: {\n            let newState = {\n                ...state,\n                newData: {\n                    ...state.newData,\n                    intro: [...state.newData.intro],\n                },\n            };\n            let introIndex = 0;\n            newState.newData.intro.map(item => {\n                if (item.id === action.id) {\n                    introIndex = newState.newData.intro.indexOf(item);\n                }\n            });\n            newState.newData.intro[introIndex].title = action.title;\n            return newState;\n        }\n        case CHANGE_INTRO_TEXT: {\n            let newState = {\n                ...state,\n                newData: {\n                    ...state.newData,\n                    intro: [...state.newData.intro],\n                },\n            };\n            let introIndex = 0;\n            newState.newData.intro.map(item => {\n                if (item.id === action.id) {\n                    introIndex = newState.newData.intro.indexOf(item);\n                }\n            });\n            newState.newData.intro[introIndex].text = action.text;\n            return newState;\n        }\n        case DELETE_INTRO: {\n            let newState = {\n                ...state,\n                newData: {\n                    ...state.newData,\n                    intro: [...state.newData.intro],\n                },\n            };\n            newState.newData.intro = newState.newData.intro.filter(item => item.id !== action.id);\n            return newState;\n        }\n        case SAVE_CHANGES: {\n            return {\n                ...state,\n                ...state.newData,\n                intro: [...state.newData.intro],\n            }\n        }\n        case RESET_CHANGES: {\n            return {\n                ...state,\n                newData: {\n                    avaUrl: state.avaUrl,\n                    bgUrl: state.bgUrl,\n                    name: state.name,\n                    city: state.city,\n                    country: state.country,\n                    intro: [...state.intro],\n                },\n            };\n        }\n        case SET_CURRENT_USER: {\n            return {\n                ...state,\n                data: action.data,\n                photos: action.photos,\n                isLoggedIn: true,\n            };\n        }\n        default:\n            return state;\n    }\n}\n\nexport const changeNameAC = (user, name) => ({\n    type: CHANGE_NAME,\n    user: user,\n    name: name,\n});\nexport const changeAvaAC = (user, avaUrl) => ({\n    type: CHANGE_AVA,\n    user: user,\n    avaUrl: avaUrl,\n});\nexport const changeBgAC = (user, bgUrl) => ({\n    type: CHANGE_BG,\n    user: user,\n    bgUrl: bgUrl,\n});\nexport const changeCityAC = (user, city) => ({\n    type: CHANGE_CITY,\n    user: user,\n    city: city,\n});\nexport const changeCountryAC = (user, country) => ({\n    type: CHANGE_COUNTRY,\n    user: user,\n    country: country,\n});\nexport const logOut = () => ({\n    type: LOG_OUT,\n});\nexport const addIntroAC = () => ({\n    type: ADD_INTRO,\n});\nexport const changeIntroTitleAC = (introId, title) => ({\n    type: CHANGE_INTRO_TITLE,\n    id: introId,\n    title: title,\n});\nexport const changeIntroTextAC = (introId, text) => ({\n    type: CHANGE_INTRO_TEXT,\n    id: introId,\n    text: text,\n});\nexport const deleteIntroAC = id => ({\n    type: DELETE_INTRO,\n    id: id,\n});\nexport const saveChangesAC = () => ({\n    type: SAVE_CHANGES,\n});\nexport const resetChangesAC = () => ({\n    type: RESET_CHANGES,\n});\n\nexport const setCurrentUser = (data, photos)  => ({\n    type: SET_CURRENT_USER, data, photos\n});\nexport const getCurrentUser = () => {\n    return dispatch => {\n        authAPI.me().then(userData => {\n            userAPI.getUserProfile(userData.data.id).then(profileData => {\n                dispatch(setCurrentUser(userData.data, profileData.photos));\n            })\n        });\n    }\n}\n\nexport default currentUserReducer;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport SettingsContentProfile from \"./SettingsContentProfile\";\nimport {\n    addIntroAC,\n    deleteIntroAC, resetChangesAC,\n    changeAvaAC, changeBgAC,\n    changeCityAC,\n    changeCountryAC,\n    changeNameAC, saveChangesAC, changeIntroTitleAC, changeIntroTextAC,\n} from \"../../../../../redux/currentUserReducer\";\n\nconst mapStateToProps = state => ({\n    currentUser: state.currentUser,\n});\n\nconst mapDispatchToProps = dispatch => ({\n    changeName: (currentUser, name) => {\n        dispatch(changeNameAC(currentUser, name));\n    },\n    changeAva: (currentUser, avaUrl) => {\n        dispatch(changeAvaAC(currentUser, avaUrl));\n    },\n    changeBg: (currentUser, bgUrl) => {\n        dispatch(changeBgAC(currentUser, bgUrl));\n    },\n    changeCity: (currentUser, city) => {\n        dispatch(changeCityAC(currentUser, city));\n    },\n    changeCountry: (currentUser, country) => {\n        dispatch(changeCountryAC(currentUser, country));\n    },\n    addIntro: () => {\n        dispatch(addIntroAC());\n    },\n    changeIntroTitle: (introId, title) => {\n        dispatch(changeIntroTitleAC(introId, title));\n    },\n    changeIntroText: (introId, text) => {\n        dispatch(changeIntroTextAC(introId, text));\n    },\n    deleteIntro: id => {\n        dispatch(deleteIntroAC(id));\n    },\n    saveChanges: () => {\n        dispatch(saveChangesAC());\n    },\n    resetChanges: () => {\n        dispatch(resetChangesAC());\n    },\n});\n\nlet SettingsContentProfileContainer = connect(mapStateToProps, mapDispatchToProps)(SettingsContentProfile);\n\nexport default SettingsContentProfileContainer;","import React from \"react\";\nimport s from \"./SettingsContentGeneral.module.css\";\nimport {Route} from \"react-router-dom\";\n\nclass SettingsContentGeneral extends React.Component {\n    render() {\n        return (\n            <div className={s.settingsContent}>\n                <img src=\"\" alt=\"\"/>\n                <span>\n                <Route path=\"/settings/profile\" render={() => \"Profile\"}/>\n                <Route path=\"/settings/general\" render={() => \"SettingsContentGeneral\"}/>\n            </span>\n            </div>\n        );\n    }\n}\n\nexport default SettingsContentGeneral;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport SettingsContentGeneral from \"./SettingsContentGeneral\";\n\nconst mapStateToProps = state => ({\n    currentUser: state.currentUser.user,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n});\n\nlet SettingsContentGeneralContainer = connect(mapStateToProps, mapDispatchToProps)(SettingsContentGeneral);\n\nexport default SettingsContentGeneralContainer;","import React from \"react\";\nimport s from \"./SettingsContent.module.css\";\nimport {Route} from \"react-router-dom\";\nimport SettingsContentProfileContainer from \"./SettingsContentProfile/SettingsContentProfileContainer\";\nimport SettingsContentGeneralContainer from \"./SettingsContentGeneral/SettingsContentGeneralContainer\";\n\nclass SettingsContent extends React.Component {\n    render() {\n        return (\n            <div className={s.settingsContent}>\n                <Route path=\"/settings/profile\" render={() => <SettingsContentProfileContainer/>}/>\n                <Route path=\"/settings/general\" render={() => <SettingsContentGeneralContainer/>}/>\n            </div>\n        );\n    }\n}\n\nexport default SettingsContent;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport SettingsContent from \"./SettingsContent\";\n\nconst mapStateToProps = state => ({\n    currentUser: state.currentUser,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n});\n\nlet SettingsContentContainer = connect(mapStateToProps, mapDispatchToProps)(SettingsContent);\n\nexport default SettingsContentContainer;","import React from \"react\";\nimport s from \"./Settings.module.css\";\nimport SettingsNavbar from \"./SettingsNavbar/SettingsNavbar\";\nimport SettingsContentContainer from \"./SettingsContent/SettingsContentContainer\";\n\nclass Settings extends React.Component {\n    render() {\n        return (\n            <div className={s.settings}>\n                <SettingsContentContainer/>\n                <SettingsNavbar/>\n            </div>\n        );\n    }\n}\n\nexport default Settings;","import React from \"react\";\nimport s from \"./News.module.css\";\nimport Post from \"../../common/Post/Post\";\n\nclass News extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className={s.news}>\n                {this.props.posts.map((p) => <Post post={p} doLike={this.props.doLike} doUnlike={this.props.doUnlike}/>)}\n            </div>\n        );\n    }\n}\n\nexport default News;","const DO_LIKE = \"DO-LIKE\";\nconst DO_UNLIKE = \"DO-UNLIKE\";\n\nlet initState = {\n    posts: [\n        {\n            id: 0,\n            text: \"Hey, people, here's my first post!\",\n            date: \"28.05.2020, 17:25:09\",\n            liked: false,\n            likesCount: 0,\n            user: {\n                id: 0,\n                photos: {\n                    small: \"https://hypeava.ru/uploads/posts/2020-03/1583012706_5.jpg\",\n                    large: \"https://hypeava.ru/uploads/posts/2020-03/1583012706_5.jpg\",\n                },\n                name: \"Test User\",\n            }\n        },\n    ],\n}\n\nconst newsReducer = (state = initState, action) => {\n    switch (action.type) {\n        case DO_LIKE:\n            return {\n                ...state,\n                posts: [...state.posts.map(p => {\n                    if (p.id === action.postId) {\n                        p.liked = true;\n                        p.likesCount++;\n                    }\n                    return p;\n                })]\n            }\n        case DO_UNLIKE:\n            return {\n                ...state,\n                posts: [...state.posts.map(p => {\n                    if (p.id === action.postId) {\n                        p.liked = false;\n                        p.likesCount--;\n                    }\n                    return p;\n                })]\n            }\n        default:\n            return state;\n    }\n}\n\nexport const doLikeAC = postId => ({\n    type: DO_LIKE,\n    postId: postId,\n});\nexport const doUnlikeAC = postId => ({\n    type: DO_UNLIKE,\n    postId: postId,\n});\n\nexport default newsReducer;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport News from \"./News\";\nimport {doLikeAC, doUnlikeAC} from \"../../../redux/newsReducer\";\n\nconst mapStateToProps = (state) => ({\n    posts: state.newsPage.posts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    doLike: postId => {\n        dispatch(doLikeAC(postId))\n    },\n    doUnlike: postId => {\n        dispatch(doUnlikeAC(postId))\n    },\n});\n\nlet NewsContainer = connect(mapStateToProps, mapDispatchToProps)(News);\n\nexport default NewsContainer;","import React from \"react\";\nimport s from \"./SidebarLeft.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nclass SidebarLeft extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <aside className={s.aside}>\n                <nav>\n                    <NavLink to={this.props.isLoggedIn ? `/profile/${this.props.userId}` : `/login`}\n                             activeClassName={this.props.isLoggedIn ? s.active : ''}\n                    >Profile</NavLink>\n                    <NavLink to={\"/news\"} activeClassName={s.active}>News</NavLink>\n                    <NavLink to={this.props.isLoggedIn ? `/messages` : `/login`}\n                             activeClassName={this.props.isLoggedIn ? s.active : ''}\n                    >Messages</NavLink>\n                    <NavLink to={\"/music\"} activeClassName={s.active}>Music</NavLink>\n                    <NavLink to={\"/users\"} activeClassName={s.active}>Users</NavLink>\n                    <NavLink to={this.props.isLoggedIn ? `/settings/profile` : `/login`}\n                             activeClassName={this.props.isLoggedIn ? s.active : ''}\n                    >Settings</NavLink>\n                </nav>\n            </aside>\n        );\n    }\n}\n\nexport default SidebarLeft;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport SidebarLeft from \"./SidebarLeft\";\n\nconst mapStateToProps = state => ({\n    userId: state.currentUser.data.id,\n    isLoggedIn: state.currentUser.isLoggedIn,\n});\n\nconst mapDispatchToProps = () => ({});\n\nlet SidebarLeftContainer = connect(mapStateToProps, mapDispatchToProps)(SidebarLeft);\n\nexport default SidebarLeftContainer;","import React from \"react\";\nimport s from \"./Header.module.css\";\nimport arrowDown from \"../../assets/svg/arrowDown.svg\";\nimport {NavLink} from \"react-router-dom\";\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.userMenuNavElement = React.createRef();\n        this.props.getCurrentUser();\n    }\n\n    toggleUserMenuNav() {\n        this.userMenuNavElement.current.style.display = this.userMenuNavElement.current.style.display === \"block\" ? \"none\" : \"block\";\n    }\n\n    render() {\n        const photoUrl = this.props.user.photos.small\n            ? this.props.user.photos.small\n            : \"https://p.kindpng.com/picc/s/78-785827_user-profile-avatar-login-account-male-user-icon.png\"\n\n        return (\n            <header className={s.header}>\n                {this.props.user.isLoggedIn ? (\n                    <button className={s.userMenu} onClick={this.toggleUserMenuNav.bind(this)}>\n                        <img className={s.ava} src={photoUrl} alt=\"\"/>\n                        <span>{this.props.user.name}</span>\n                        <img className={s.arrow} src={arrowDown} alt=\"\"/>\n                        <div className={s.userMenuNav} ref={this.userMenuNavElement}>\n                            <NavLink to={`/profile/${this.props.user.id}`}>Profile</NavLink>\n                            <NavLink to=\"/settings/profile\">Settings</NavLink>\n                            <button onClick={this.props.logOut}>Log Out</button>\n                        </div>\n                    </button> )\n                    : <NavLink to={'/login'} className={s.logInLink}>Log In</NavLink>\n                }\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Header from \"./Header\";\nimport {getCurrentUser, logOut} from \"../../redux/currentUserReducer\";\n\nconst mapStateToProps = state => ({\n    user: state.currentUser,\n});\n\nlet HeaderContainer = connect(mapStateToProps, {\n    logOut, getCurrentUser\n})(Header);\n\nexport default HeaderContainer;","import React from 'react';\r\nimport s from \"./User.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst User = props => {\r\n    const photoUrl = props.photo ? props.photo : \"https://p.kindpng.com/picc/s/78-785827_user-profile-avatar-login-account-male-user-icon.png\"\r\n    let followButton;\r\n    if (!props.isLoggedIn) {\r\n        followButton = <button><NavLink to={'/login'}>Follow</NavLink></button>\r\n    }\r\n    else if (props.followed) {\r\n        followButton = <button>Unfollow</button>\r\n    } else {\r\n        followButton = <button>Follow</button>\r\n    }\r\n\r\n    return (\r\n        <div className={s.user}>\r\n            <NavLink to={\"/profile/\" + props.id}>\r\n                <img src={photoUrl} alt=\"\"/>\r\n                <h4>{props.name}</h4>\r\n            </NavLink>\r\n            {followButton}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User;","import React from \"react\";\nimport s from \"./Users.module.css\";\nimport User from \"./User/User\";\nimport Preloader from \"../../common/Preolader/Preloader\";\n\nconst Users = props => {\n    let pagesCount = Math.ceil(props.usersTotalCount / props.usersCount);\n    if (pagesCount > 20) {\n        pagesCount = 20;\n    }\n\n    let paginationElements = [];\n    for (let p = 1; p <= pagesCount; p++) {\n        if (p === props.currentPage) {\n            paginationElements.push(<button className={s.paginationButton + ' ' + s.current} onClick={() => { props.onSetCurrentPage(p) } }>{p}</button>);\n        }\n        else {\n            paginationElements.push(<button className={s.paginationButton} onClick={() => { props.onSetCurrentPage(p) } }>{p}</button>);\n        }\n    }\n\n    let usersElements = props.users.map(u => <User key={u.id} id={u.id} name={u.name} photo={u.photos.small}\n                                                   followed={u.followed} isLoggedIn={props.isLoggedIn}/>);\n\n    return <div className={s.usersContent}>\n        {props.isFetching ? <Preloader/> : (<>\n                <div className={s.paginationList}>{paginationElements}</div>\n                <div className={s.usersList}>{usersElements}</div>\n            </>\n        )}\n    </div>\n}\n\nexport default Users;","import {userAPI} from \"../api/api\";\r\n\r\nconst SET_USERS = \"SET-USERS\";\r\nconst SET_USERS_TOTAL_COUNT = \"SET_USERS_TOTAL_COUNT\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst TOGGLE_FETCHING = \"TOGGLE_FETCHING\";\r\n\r\nconst initState = {\r\n    users: [],\r\n    usersTotalCount: 0,\r\n    usersCount: 12,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n}\r\n\r\nconst usersReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {...state, users: action.users};\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return {...state, usersTotalCount: action.usersTotalCount};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.page};\r\n        case TOGGLE_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUsers = users => ({\r\n    type: SET_USERS,\r\n    users: users,\r\n});\r\nexport const getUsers = (page = 1, usersCount = 10)  => {\r\n    return dispatch => {\r\n        dispatch(toggleFetching(true));\r\n        userAPI.getUsers(page, usersCount)\r\n            .then(data => {\r\n                dispatch(toggleFetching(false));\r\n                dispatch(setUsers(data.items));\r\n                dispatch(setUsersTotalCount(data.totalCount));\r\n                dispatch(setCurrentPage(page));\r\n            })\r\n            .catch(() => dispatch(toggleFetching(false)));\r\n    }\r\n}\r\n\r\nexport const setUsersTotalCount = usersTotalCount => ({\r\n    type: SET_USERS_TOTAL_COUNT,\r\n    usersTotalCount: usersTotalCount,\r\n});\r\n\r\nexport const setCurrentPage = page => ({\r\n    type: SET_CURRENT_PAGE,\r\n    page: page,\r\n});\r\n\r\nexport const toggleFetching = isFetching => ({\r\n    type: TOGGLE_FETCHING,\r\n    isFetching: isFetching,\r\n});\r\n\r\nexport default usersReducer;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Users from \"./Users\";\nimport {setUsers, toggleFetching, getUsers} from \"../../../redux/usersReducer\";\nimport {setUsersTotalCount} from \"../../../redux/usersReducer\";\nimport {setCurrentPage} from \"../../../redux/usersReducer\";\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(1, this.props.usersCount);\n    }\n\n    onSetCurrentPage(page) {\n        this.props.getUsers(page, this.props.usersCount);\n    }\n\n    render() {\n        return <Users\n            usersTotalCount={this.props.usersTotalCount}\n            usersCount={this.props.usersCount}\n            currentPage={this.props.currentPage}\n            users={this.props.users}\n            isFetching={this.props.isFetching}\n            onSetCurrentPage={this.onSetCurrentPage.bind(this)}\n        />\n    }\n}\n\nconst mapStateToProps = state => ({\n    users: state.usersPage.users,\n    usersTotalCount: state.usersPage.usersTotalCount,\n    usersCount: state.usersPage.usersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    isLoggedIn: state.currentUser.isLoggedIn\n});\n\nexport default connect(mapStateToProps, {\n    setUsers, setUsersTotalCount, setCurrentPage, toggleFetching, getUsers\n})(UsersContainer);","import React from 'react';\r\n\r\nconst LogIn = () => {\r\n    return <h2>LogIn page has to be here. Will be available in November 5 😉</h2>\r\n}\r\n\r\nexport default LogIn;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {HashRouter, Route} from 'react-router-dom';\nimport ProfileContainer from \"./components/content/Profile/ProfileContainer\";\nimport Messages from \"./components/content/Messages/Messages\";\nimport Music from \"./components/content/Music/Music\";\nimport Settings from \"./components/content/Settings/Settings\";\nimport NewsContainer from \"./components/content/News/NewsContainer\";\nimport SidebarLeftContainer from \"./components/SidebarLeft/SidebarLeftContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport UsersContainer from \"./components/content/Users/UsersContainer\";\nimport LogIn from \"./components/content/LogIn/LogIn\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <HashRouter>\n                <div className=\"App\">\n                    <HeaderContainer/>\n                    <SidebarLeftContainer/>\n                    <main className=\"content\">\n                        <Route path=\"/profile/:userId\" component={ProfileContainer}/>\n                        <Route path=\"/news\" component={NewsContainer}/>\n                        <Route path=\"/messages\" component={Messages}/>\n                        <Route path=\"/music\" component={Music}/>\n                        <Route path=\"/users\" component={UsersContainer}/>\n                        <Route path=\"/settings\" component={Settings}/>\n                        <Route path=\"/login\" component={LogIn}/>\n                    </main>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"content is cached for offline use.\" message.\n              console.log('content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport profileReducer from \"./profileReducer\";\nimport {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport newsReducer from \"./newsReducer\";\nimport currentUserReducer from \"./currentUserReducer\";\nimport usersReducer from \"./usersReducer\";\nimport thunk from \"redux-thunk\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    newsPage: newsReducer,\n    currentUser: currentUserReducer,\n    usersPage: usersReducer,\n});\n\nlet store = createStore(reducers, applyMiddleware(thunk));\n\nwindow.store = store\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}